import {
  Component,
  Input,
  ChangeDetectionStrategy,
  OnInit,
  OnChanges,
  ElementRef,
} from '@angular/core';
import { FudisHeadingLevel, FudisHeadingVariant } from '../../../types/typography';
import { FudisIdService } from '../../../services/id/id.service';
import { FudisComponentChanges } from '../../../types/miscellaneous';
import { FudisTextAlign } from '../../../types/typography';
import { FudisSpacing } from '../../../types/spacing';
import { BehaviorSubject } from 'rxjs';

@Component({
  selector: 'fudis-heading',
  templateUrl: './heading.component.html',
  styleUrls: ['./heading.component.scss'],
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class HeadingComponent implements OnInit, OnChanges {
  constructor(
    private _idService: FudisIdService,
    private _headingElement: ElementRef,
  ) {
    /**
     * Set Heading wrapper to be "full width" if used inside Grid
     */
    (_headingElement.nativeElement as HTMLHeadingElement).style.gridColumn = '1/-1';
  }

  /**
   * Semantic level of heading
   */
  @Input({ required: true }) level: FudisHeadingLevel;

  /**
   * Heading variant
   */
  @Input() variant: FudisHeadingVariant;

  /**
   * Margin bottom for heading
   */
  @Input() marginBottom: FudisSpacing;

  /**
   * Heading id. If not provided, generated by FudisIdService.
   */
  @Input() id: string;

  /**
   * Align heading
   */
  @Input() align: FudisTextAlign = 'left';

  /**
   * Heading CSS class list
   */
  protected _classList = new BehaviorSubject<string[]>([]);

  /**
   * Internal id to generate unique id
   */
  protected _id: string;

  /**
   * Get default marginBottom size
   */
  private _getMarginBottom(variant: FudisHeadingVariant): FudisSpacing {
    if (variant === 'xxl' || variant === 'xl') {
      return 'sm';
    }

    if (variant === 'label') {
      return 'xxs';
    }

    return 'xs';
  }

  /**
   * Get corresponding default variant for a heading level
   */
  private _getVariant(): FudisHeadingVariant {
    switch (this.level) {
      case 1:
        return 'xxl';
      case 2:
        return 'xl';
      case 3:
        return 'lg';
      case 4:
        return 'md';
      case 5:
        return 'sm';
      case 6:
        return 'xs';
      default:
        return 'lg';
    }
  }

  /**
   * Set CSS classes for heading
   */
  private _setClasses(): void {
    const calcVariant = this.variant || this._getVariant();

    const calcMarginBottom = this.marginBottom || this._getMarginBottom(calcVariant);

    const newClasses = [
      `fudis-heading`,
      `fudis-heading__variant__${calcVariant}`,
      `fudis-mb-${calcMarginBottom}`,
      `fudis-heading__align__${this.align}`,
    ];

    this._classList.next(newClasses);
  }

  ngOnInit(): void {
    this._id = this.id ?? this._idService.getNewId('heading');

    this._setClasses();
  }

  ngOnChanges(changes: FudisComponentChanges<HeadingComponent>): void {
    if (
      changes.align?.currentValue !== changes.align?.previousValue ||
      changes.variant?.currentValue !== changes.variant?.previousValue ||
      changes.marginBottom?.currentValue !== changes.marginBottom?.previousValue ||
      changes.level?.currentValue !== changes.level?.previousValue
    ) {
      this._setClasses();
    }
  }
}
