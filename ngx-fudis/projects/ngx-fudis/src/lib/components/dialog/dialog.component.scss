@use "../../foundations/spacing/tokens.scss" as spacing;
@use "../../foundations/breakpoints/mixins.scss" as breakpoints;
@use "../../foundations/grid/tokens.scss" as gridTokens;
@use "../../foundations/borders/mixins.scss" as borders;

@mixin mobile-dialog-width {
  width: calc(spacing.$spacing-dialog-xs - (2 * spacing.$spacing-sm));
}

.fudis-dialog {
  box-sizing: border-box;
  position: relative;
  margin: spacing.$spacing-md spacing.$spacing-sm;
  max-width: calc(100vw - spacing.$spacing-xxl);

  &__close {
    float: right;

    &__absolute {
      position: absolute;
      top: 0;
      right: 0;
      float: initial;
    }
  }

  &__size {
    &__xs {
      @include mobile-dialog-width;
    }

    &__sm {
      @include mobile-dialog-width;

      @include breakpoints.breakpoint("sm") {
        width: calc(spacing.$spacing-dialog-sm - (2 * spacing.$spacing-sm));
      }
    }

    &__md {
      @include mobile-dialog-width;

      @include breakpoints.breakpoint("sm") {
        width: calc(spacing.$spacing-dialog-md - (2 * spacing.$spacing-sm));
      }
    }

    &__lg {
      @include mobile-dialog-width;

      @include breakpoints.breakpoint("sm") {
        width: calc(spacing.$spacing-dialog-lg - (2 * spacing.$spacing-sm));
      }

      @include breakpoints.breakpoint("lg") {
        /* stylelint-disable-next-line unit-disallowed-list */
        max-width: calc(100vw - 6rem);
      }
    }

    &__xl {
      @include mobile-dialog-width;

      @include breakpoints.breakpoint("sm") {
        width: calc(spacing.$spacing-dialog-xl - (2 * spacing.$spacing-sm));
      }

      @include breakpoints.breakpoint("lg") {
        /* stylelint-disable-next-line unit-disallowed-list */
        max-width: calc(100vw - 6rem);
      }
    }
  }
}
