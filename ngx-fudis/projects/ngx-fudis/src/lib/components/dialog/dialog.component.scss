/* stylelint-disable unit-disallowed-list */
@use '../../foundations/spacing/tokens.scss' as spacing;
@use '../../foundations/breakpoints/mixins.scss' as breakpoints;
@use '../../foundations/borders/mixins.scss' as borders;

$dialog-width-xs: calc(30rem / var(--fudis-rem-multiplier));
$dialog-width-sm: calc(44rem / var(--fudis-rem-multiplier));
$dialog-width-md: calc(55rem / var(--fudis-rem-multiplier));
$dialog-width-lg: calc(70rem / var(--fudis-rem-multiplier));
$dialog-width-xl: calc(90rem / var(--fudis-rem-multiplier));

.fudis-dialog {
  @include borders.border('1px', 'solid', 'gray-dark');

  box-sizing: border-box;
  position: relative;
  padding: spacing.$spacing-md spacing.$spacing-sm;
  max-width: calc(100vw - spacing.$spacing-lg);

  &__close {
    float: right;

    &__absolute {
      position: absolute;
      right: spacing.$spacing-sm;

      @include breakpoints.breakpoint('sm') {
        right: spacing.$spacing-xl;
      }
    }
  }

  &__size {
    &__xs {
      width: $dialog-width-xs;
    }

    &__sm {
      width: $dialog-width-sm;
    }

    &__md {
      width: $dialog-width-md;
    }

    &__lg {
      width: $dialog-width-lg;
    }

    &__xl {
      width: $dialog-width-xl;
    }
  }

  @include breakpoints.breakpoint('sm') {
    padding: spacing.$spacing-md spacing.$spacing-xl;
  }

  @include breakpoints.breakpoint('md') {
    max-width: calc(100vw - spacing.$spacing-xxl);
  }
}
